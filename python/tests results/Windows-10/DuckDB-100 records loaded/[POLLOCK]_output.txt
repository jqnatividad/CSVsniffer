+[0Al-Sn.CSV]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[1% nano+20% micro.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
X[1% SiO2_003.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[10.January_2019.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[100mAOne.CSV]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[18-12-06.CSV]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[2004-2016.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[20170320-ePC_Data-Travel-Stationery.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[300mAThree.CSV]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[air_quality_station3_2006.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[AL5083-emissivity.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
Error was: Invalid Input Error: CSV Error on Line: 4
Original Line: 
"",On Composition of SOAP Based and RESTful Services,"Thakar, U and Tiwari, A and Varma, S","Many online businesses expose their technological product and service offerings as web services. To offer the desired functionality, often a number of simple web services need to be combined to create a composite web service. Traditionally, services were implemented as SOAP based services. However, RESTful services are now becoming more popular. Thus, there is a large pool of services available to users for inclusion in a composite service. The BPEL (Business Process Execution Language) has been in use for creation of complex services as per the workflow. At present, the BPEL standard does not support inclusion of RESTful web services in the business process. This prevents inclusion of many useful services in a complex business use case where lots of web services are required in order to achieve desired functionality. In this paper, a method RESO Co has been proposed that enables the conventional BPEL engine to consume SOAP based as well as RESTful services in composition. The presented method thus helps in increasing the number of services available for composition while also preserving the advantage of lightweight nature of RESTful services.",10.1109/IACC.2016.99,SOAP;RESTful Services;BPEL;Composite Service; Simple object access protocol;Business;Java;Process control;Standards;Engines; access protocols;business data processing;Web services;Web Services Business Process Execution Language; SOAP based composition;restful services;composite Web service;Business Process Execution Language;BPEL;RESO Co approach,,1,1,,
Invalid unicode (byte sequence mismatch) detected.

Possible Solution: Enable ignore errors (ignore_errors=true) to skip this row

  file = d:\\WG Software\\CSV file handler\\GitHub\\CSVsniffer\\python\\CSV\\all.csv
  delimiter = , (Auto-Detected)
  quote = " (Auto-Detected)
  escape = \0 (Auto-Detected)
  new_line = Single-Line File (Auto-Detected)
  header = false (Auto-Detected)
  skip_rows = 0 (Auto-Detected)
  comment = \0 (Auto-Detected)
  date_format =  (Auto-Detected)
  timestamp_format =  (Auto-Detected)
  null_padding = 0
  sample_size = 2048
  ignore_errors = false
  all_varchar = 0


X [all.csv]: --> No result from DuckDB
+[April-2011-for-publication.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Auto_Tone_sub205_over.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Auto_Tone_sub242_nov.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[Auto_Tone_sub315_day1.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'singlequote'}
X[Batch_3250493_batch_results.csv]: --> DuckDB detected: delimiter = ',', quotechar = "'"| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[Businesses with a rateable value of less than $12,000 - March 2016.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[business_expenses_apr_jun_14_peter_lewis.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Camp Palacios - Humidity.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Camp Palacios - Wind Direction.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Consular_cases_April_2016.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Copy_of_2016-17_Q3_Final_V2.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[csv_good_dialect_star.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[dd_Wickenburg_nobmp_623.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[download (10).csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[download (6).csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[dwp-cmg-spend-1214.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[epcs-dwp-cmg-spend-july-2017.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[erionite.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[extended.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Feb-2016.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[FEC data - [clevercsv issue #15].csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'
+[File with multi-line field.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[file_double_trailing_newline.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[file_escape_char_0x00.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[file_escape_char_0x5C.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[file_field_delimiter_0x20.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'space', quotechar = 'doublequote'}
+[file_field_delimiter_0x2C_0x20.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_field_delimiter_0x3B.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[file_field_delimiter_0x9.csv]: --> DuckDB detected: delimiter = '\t', quotechar = '"'
+[file_header_multirow_2.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_header_multirow_3.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_header_only.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[file_multitable_less.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
X[file_multitable_more.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
X[file_multitable_same.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
+[file_no_header.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[file_no_trailing_newline.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_one_data_row.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_preamble.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[file_quotation_char_0x27.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'singlequote'}
+[file_record_delimiter_0xA.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[file_record_delimiter_0xD.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[fire_archive_V1_50574.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[fr_hypo1.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[fr_RG65_pageid.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[GPC_DCLG_December_2015_for_Publication.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[hist_2000_15O.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[HMRC_spending_over_25000_for_September_2018.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[hypo5.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Json data type - [clevercsv issue #37].csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[june_2015(1).csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Kokad pollen.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
X[Line feed character is more frequent than the car return-line feed combination.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
+[LOS_1050CFit.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[ministers-overseas-travel-jan-mar-2013.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[ministry-of-defence__30-09-2012__mod_300912-Air-Govt-data-template-u-senior.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Mixed comma and colon - [clevercsv issue #35].csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Mixed comma and semicolon-B.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
Error was: Invalid Input Error: CSV Error on Line: 1
Invalid unicode (byte sequence mismatch) detected.

Possible Solution: Enable ignore errors (ignore_errors=true) to skip this row

  file = d:\\WG Software\\CSV file handler\\GitHub\\CSVsniffer\\python\\CSV\\Mixed comma and semicolon.csv
  delimiter = , (Auto-Detected)
  quote = " (Auto-Detected)
  escape = \0 (Auto-Detected)
  new_line = Single-Line File (Auto-Detected)
  header = false (Auto-Detected)
  skip_rows = 0 (Auto-Detected)
  comment = \0 (Auto-Detected)
  date_format =  (Auto-Detected)
  timestamp_format =  (Auto-Detected)
  null_padding = 0
  sample_size = 2048
  ignore_errors = false
  all_varchar = 0


X [Mixed comma and semicolon.csv]: --> No result from DuckDB
+[moj-aramis-data-march-11.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[mordenite-dh-2.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[mos-oct-dec-2014.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[movies-condensed.csv]: --> DuckDB detected: delimiter = '\t', quotechar = '"'
X[Multiple commas in fields.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
+[narrow.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[nati-clin-audi-bowe-canc-2017-tran-main-fiel-list.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[NBA_scores_out.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Note_4_Staff_costs_-_Average_number_of_persons_employed_13-14.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[O18_air.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[OccurrenceData351.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Oct_2013.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Optional quoted fields.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[over25k-transparency.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[permanent_secretary_and_director_general_expenses_and_hospitality_april_to_june_2012.csv]: --> DuckDB detected: delimiter = '|', quotechar = "'"| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
X[picasso.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'tab', quotechar = 'doublequote'}
X[Pipe character is more frequent than the comma.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
X[Pipe character is more frequent than the semicolon.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
+[planning-application-aug-17.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
Error was: Invalid Input Error: CSV Error on Line: 25
Invalid unicode (byte sequence mismatch) detected.

Possible Solution: Enable ignore errors (ignore_errors=true) to skip this row

  file = d:\\WG Software\\CSV file handler\\GitHub\\CSVsniffer\\python\\CSV\\PLA_6%Talc-1hz.csv
  delimiter = , (Auto-Detected)
  quote = " (Auto-Detected)
  escape = \0 (Auto-Detected)
  new_line = Single-Line File (Auto-Detected)
  header = false (Auto-Detected)
  skip_rows = 0 (Auto-Detected)
  comment = \0 (Auto-Detected)
  date_format =  (Auto-Detected)
  timestamp_format =  (Auto-Detected)
  null_padding = 0
  sample_size = 2048
  ignore_errors = false
  all_varchar = 0


X [PLA_6%Talc-1hz.csv]: --> No result from DuckDB
+[prison-and-probation-ombudsman__30-09-2014__justice_PPO-September-Return-senior.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[pssave_traindata_m=10_n=10_timelow=15_timehight=30_numofloop=2000.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[public-toilet-borough-grid.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Rainbow CSV [issue #92].csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[rape_table_3_prosecution_outcomes_0708_1314.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Resultsgk06.datInfos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.25_10.dat__m21Infos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.25_5.dat__m28.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.50_1.dat__m21.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.50_10.dat__m28Infos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.50_3.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.50_5.dat__m23.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.75_1.dat__m21Infos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.75_10.dat__m13.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x100-0.75_5.dat__m29Infos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.25_7.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.50_1.datInfos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.50_4.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.75_2.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.75_3.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.75_4.datInfos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x250-0.75_9.datInfos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x500-0.50_6.datInfos.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[ResultsOR30x500-0.75_3.dat.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
X[row_extra_quote0_col0.csv]: --> DuckDB detected: delimiter = '|', quotechar = "'"| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
X[row_extra_quote5_col3.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[row_field_delimiter_0_0x20.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[row_field_delimiter_5_0x20.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[row_less_sep_row0_col1.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[row_less_sep_row5_col6.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
X[row_more_sep_row0_col0.csv]: --> DuckDB detected: delimiter = '|', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[row_more_sep_row5_col6.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[S30out.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[S39.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[scottish_law_commission-2011-03-31-organogram-junior.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[senior-staff-march-2020.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Short pipe separated table embedded.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[SouthTrent_Demand_zone-based.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[spending_2020_01.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[student_loans_company_limited-2011-09-30-organogram-senior.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Sun2014-Rs.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Sustainability_-_Water_consumption_P_56.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Table embedded in the last record.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Table embedded in the second record.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Takakai2008-ch4.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[testGeometries.txt]: --> DuckDB detected: delimiter = ',', quotechar = '"'| EXPECTED:{delimiter = 'semicolon', quotechar = 'doublequote'}
+[tetranatrolite.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[trinity-house__31-03-2015__dft_310315-Trinity-House-Organogram-ver-1-junior.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
X[Undefined field delimiter.csv]: --> DuckDB detected: delimiter = '\t', quotechar = '"'| EXPECTED:{delimiter = 'comma', quotechar = 'doublequote'}
+[vissim_data_conf2473_i12_v2026.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[vissim_data_conf2473_i7_v1987.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[W32.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[W44out.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[wairakite-dh.csv]: --> DuckDB detected: delimiter = ';', quotechar = '"'
+[Wakefield Council Procurement Card Transactions 2018-19 Q2.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[Wine_Cellar_Consumption_dataset_14-15.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
+[workforce-management-information-dft_201706.csv]: --> DuckDB detected: delimiter = ',', quotechar = '"'
[Passed test ratio]--: 84.1379%
[Delimiter ratio]--: 85.5172%
[Failure ratio]--: 2.027%
[Elapsed time]--: 1.82 seconds
<---------------------------------------------------------------------------------------->
True Positive (TP): 122
False Positive (FP): 23
False Negative (FN): 3
#
Precision (P): 0.8414
Recall (R): 0.976
F1 score: 0.9037
Weighted F1 score for 148 files: 110.25139999999999
